// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");

function get(state, field) {
  if (field) {
    return state[/* age */1];
  } else {
    return state[/* email */0];
  }
}

function set(state, field, value) {
  if (field) {
    return /* record */[
            /* email */state[/* email */0],
            /* age */value
          ];
  } else {
    return /* record */[
            /* email */value,
            /* age */state[/* age */1]
          ];
  }
}

var State = /* module */[
  /* get */get,
  /* set */set
];

var state = /* record */[
  /* email */"test@test.com",
  /* age */0
];

Jest.describe("lenses-ppx", (function (param) {
        Jest.test("should match snapshot", (function (param) {
                return Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](state));
              }));
        Jest.test("should get email", (function (param) {
                return Jest.Expect[/* toBe */2]("test@test.com", Jest.Expect[/* expect */0]("test@test.com"));
              }));
        Jest.test("should get age", (function (param) {
                return Jest.Expect[/* toBe */2](0, Jest.Expect[/* expect */0](0));
              }));
        Jest.test("should set email", (function (param) {
                var match = set(state, /* Email */0, "other@test.com");
                return Jest.Expect[/* toBe */2]("other@test.com", Jest.Expect[/* expect */0](match[/* email */0]));
              }));
        return Jest.test("should set age", (function (param) {
                      var age = set(state, /* Age */1, 10)[/* age */1];
                      return Jest.Expect[/* toBe */2](10, Jest.Expect[/* expect */0](age));
                    }));
      }));

exports.State = State;
exports.state = state;
/*  Not a pure module */
